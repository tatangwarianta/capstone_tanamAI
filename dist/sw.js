let currentHash="";const CACHE_NAME="story-app-shell-v9",urlsToCache=["/","/index.html","/main.bundle.js","/styles/main.css","/icons/icon-192x192.png","/icons/icon-512x512.png","/offline.html","/manifest.json"];self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((async e=>{for(const t of urlsToCache)try{await e.add(t),console.log("[SW] Cached:",t)}catch(e){console.error("[SW] Failed to cache:",t,e)}}))),self.skipWaiting()})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.filter((e=>e!==CACHE_NAME)).map((e=>caches.delete(e))))))),self.clients.claim()})),self.addEventListener("fetch",(e=>{const t=e.request.url;t.includes("hot-update")||t.includes("webpack-dev-server")||t.includes("__webpack")||e.respondWith((async()=>{if("image"===e.request.destination){const t=await caches.match(e.request);if(t)return t}try{const t=await fetch(e.request);return"GET"===e.request.method&&(await caches.open(CACHE_NAME)).put(e.request,t.clone()),t}catch(a){const s=await caches.match(e.request);return t.includes("/login")||t.includes("/register")||t.endsWith("/")||t.endsWith("/index.html")?caches.match("/index.html"):s||"document"!==e.request.destination?s||new Response("",{status:503,statusText:"Service Unavailable"}):caches.match("/offline.html")}})())})),self.addEventListener("push",(e=>{let t="Notifikasi Baru",a={body:"Ada pesan baru!"};if(e.data)try{const s=e.data.json();t=s.title||t,a.body=s.body||a.body}catch(t){console.warn("[SW] Push data bukan JSON. Menggunakan text() sebagai body."),a.body=e.data.text()}e.waitUntil(self.registration.showNotification(t,a))})),self.addEventListener("message",(e=>{const{type:t,payload:a,hash:s}=e.data||{};switch(t){case"SHOW_LOCAL_NOTIFICATION":if(a){const{title:t,options:s}=a;e.waitUntil(self.registration.showNotification(t,s))}break;case"UPDATE_HASH":currentHash=s,console.log("[SW] Hash diperbarui:",currentHash);break;default:console.warn("[SW] Tidak dikenal:",t)}}));